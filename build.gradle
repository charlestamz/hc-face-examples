buildscript {
    ext {
        springBootVersion = '2.1.5.RELEASE'
        springCloudVersion = 'Greenwich.SR1'
    }
    repositories {
        maven { url 'https://maven.aliyun.com/repository/public' }
	    maven { url 'https://repo1.maven.org/maven2'}
	    maven {
	      url "https://plugins.gradle.org/m2/"
	    }
	    mavenCentral()
	    mavenLocal()
    }

    dependencies {//用来打包
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("gradle.plugin.com.google.protobuf:protobuf-gradle-plugin:0.8.5")
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot' 
apply plugin: 'io.spring.dependency-management'
apply plugin: 'application'
apply plugin: 'com.google.protobuf'

jar {
    baseName = "examples"
}
group = 'com.kanbig.faceservice'
version = '0.0.1'
repositories {
/*
    maven { // The google mirror is less flaky than mavenCentral()
        url "https://maven-central.storage-download.googleapis.com/repos/central/data/" }
    mavenLocal()
*/
    maven { url 'https://maven.aliyun.com/repository/public' }
    maven { url 'https://repo1.maven.org/maven2'}
    mavenCentral()
    mavenLocal()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

// IMPORTANT: You probably want the non-SNAPSHOT version of gRPC. Make sure you
// are looking at a tagged version of the example and not "master"!

// Feel free to delete the comment at the next line. It is just for safely
// updating the version in our release process.
//def grpcVersion = '1.20.1-SNAPSHOT' // CURRENT_GRPC_VERSION
def grpcVersion = '1.20.0' // CURRENT_GRPC_VERSION
def protobufVersion = '3.7.1'
def protocVersion = protobufVersion

dependencies {
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    compileOnly "javax.annotation:javax.annotation-api:1.2"

    // examples/advanced need this for JsonFormat
    implementation "com.google.protobuf:protobuf-java-util:${protobufVersion}"

    runtimeOnly "io.grpc:grpc-netty-shaded:${grpcVersion}"
    
	compile('org.springframework.boot:spring-boot-starter')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.apache.commons:commons-lang3')
	
    testImplementation "io.grpc:grpc-testing:${grpcVersion}"
    testImplementation "junit:junit:4.12"
    testImplementation "org.mockito:mockito-core:2.25.1"
    
    compileOnly 'org.projectlombok:lombok:1.18.6'
    annotationProcessor 'org.projectlombok:lombok:1.18.6'
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}
startScripts.enabled = false


task FaceServiceClient(type: CreateStartScripts) {
    mainClassName = 'com.kanbig.faceservice.Application'
    applicationName = 'face-examples'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = startScripts.classpath
}


applicationDistribution.into('bin') {
    from(FaceServiceClient)
    fileMode = 0755
}
dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
